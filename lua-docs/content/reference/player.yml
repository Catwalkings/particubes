keywords: ["particubes", "game", "mobile", "scripting", "cube", "voxel", "world"]
type: "Player"
extends: "Object"
description: |
    Player is a shortcut to [Client].[Player].
    
    Represents the local Player.

properties:
    - name: "BlockUnderneath"
      type: "Block"
      description: "Returns the block on which the Player is standing on."
    - name: "BlocksUnderneath"
      type: "array"
      description: "Returns an [array] of [Block]s the player is standing on"
      samples:
        - code: |
            local blocks = Player.BlocksUnderneath
            for index, value in ipairs(blocks) do 
                -- greenColorIndex is a block previously defined
                local newBlock = Block(10) -- 10: BlockerProperties index
                value:Replace(newBlock)
            end
    - name: "ID"
      type: "number"
      description: "Unique player ID for played game. A different ID can be attributed after reconnection."
    - name: "Username"
      type: "string"
      description: "Player's account username. Usernames are unique."
    - name: "IsOnGround"
      type: "boolean"
      description: "`true` when there's a block right underneath Player's feet."
    - name: "Position"
      type: "Number3"
      description: "Absolute world position of the Player."
    - name: "Rotation"
      type: "Number3"
      description: "Player's rotation. (Y value is not considered)"
    - name: "Velocity"
      type: "Number3"
      description: "Player's velocity (speed + direction)."

functions:
    - name: "CastRay"
      description: "Casts a ray from player's position,
          returns an [Impact] if it hits something, [nil] otherwise."
      return:
        - type: "Impact"
      samples:
        - code: |
            local impact = Player:CastRay()
            if impact ~= nil then
            	print(impact)
            end

    - name: "EquipBackpack"
      coming-soon: true
      description: |
          Equips an [Item], [Shape] or [MutableShape] on the back of the [Player].
          You can remove what's been equiped using [nil] argument
      argument-sets:
        -
          - name: "item"
            type: "Item"
        -
          - name: "shape"
            type: "Shape"
        -
          - name: "shape"
            type: "MutableShape"
        -
          - type: "nil"

    - name: "EquipHat"
      coming-soon: true
      description: |
          Equips an Item, Shape or MutableShape on [Player]'s head.
          You can remove what's been equiped using [nil] argument
      argument-sets:
        -
          - name: "Item"
            type: "Item"
        -
          - name: "shape"
            type: "Shape"
        -
          - name: "shape"
            type: "MutableShape"
        -
          - type: "nil"

    - name: "EquipLeftHand"
      description: |
          Puts an [Item], [Shape] or [MutableShape] in [Player]'s left hand.
          You can remove what's been equiped using [nil] argument
      argument-sets:
        -
          - name: "item"
            type: "Item"
        -
          - name: "shape"
            type: "Shape"
        -
          - name: "shape"
            type: "MutableShape"
        -
          - type: "nil"
            
    - name: "EquipRightHand"
      description: |
          Puts an [Item], [Shape] or [MutableShape] in [Player]'s right hand.
          You can remove what's been equiped using [nil] argument
      argument-sets:
        -
          - name: "item"
            type: "Item"
        -
          - name: "shape"
            type: "Shape"
        -
          - name: "shape"
            type: "MutableShape"
        -
          - type: "nil"
      samples:
        - code: |
            Config = {
              Items = { "aduermael.rainbow_sword" }
            }

            Client.OnStart = function()
              Player:EquipRightHand(Items.aduermael.rainbow_sword)
              -- or
              local s = Shape(Items.aduermael.rainbow_sword)
              Player:EquipRightHand(s)

              Player:EquipRightHand(nil) -- unequips the sword
            end

    - name: "SwapHands"
      description: |
          Swaps [Player]'s hand held items.
          If one hand holds nothing, the [Item] switches hands.

